{"ast":null,"code":"var _jsxFileName = \"/Users/ellynfrancess/Downloads/101329235_comp3123_labtest2/src/components/weatherPage.js\";\nimport React from \"react\";\nimport \"../styles/weather.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Current(_ref) {\n  let {\n    weatherInfo,\n    location,\n    date\n  } = _ref;\n  const ts = weatherInfo.current.dt;\n\n  function dayConverter(timestamp) {\n    var a = new Date(timestamp * 1000);\n    var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    var year = a.getFullYear();\n    var month = months[a.getMonth()];\n    var date = a.getDate();\n    var day = month + ' ' + date + ', ' + year;\n    return day;\n  }\n\n  function timeConverter(timestamp) {\n    var a = new Date(timestamp * 1000);\n    var hour = a.getHours();\n    var min = a.getMinutes();\n    var sec = a.getSeconds();\n    var date = hour + ':' + min + ':' + sec;\n    return date;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Weather\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"icon\",\n        src: \"https://openweathermap.org/img/wn/\" + weatherInfo.current.weather[0].icon + \".png\",\n        alt: weatherInfo.current.weather[0].main\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"temp\",\n          children: [Math.round(weatherInfo.current.temp), /*#__PURE__*/_jsxDEV(\"sup\", {\n            className: \"temp-sym\",\n            children: \"\\xB0C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\" Humidity: \", weatherInfo.current.humidity, \"% \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\" \", \"Wind: \", Math.round(weatherInfo.current.wind_speed * 3.6), \" km/h\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\" Pressure: \", weatherInfo.current.pressure, \" mb \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\" Feels Like: \", Math.round(weatherInfo.current.feels_like), \"\\xB0C \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"other-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"other-city\",\n        children: [location.city || location.town, \",\", \" \", location.state || location.country.toUpperCase()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"other-clouds\",\n        children: weatherInfo.current.weather[0].description.toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"other-clouds\",\n        children: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"other-clouds\",\n        children: dayConverter(ts)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"other-clouds\",\n        children: timeConverter(ts)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_c = Current;\n\nvar _c;\n\n$RefreshReg$(_c, \"Current\");","map":{"version":3,"sources":["/Users/ellynfrancess/Downloads/101329235_comp3123_labtest2/src/components/weatherPage.js"],"names":["React","Current","weatherInfo","location","date","ts","current","dt","dayConverter","timestamp","a","Date","months","year","getFullYear","month","getMonth","getDate","day","timeConverter","hour","getHours","min","getMinutes","sec","getSeconds","weather","icon","main","Math","round","temp","humidity","wind_speed","pressure","feels_like","city","town","state","country","toUpperCase","description"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport \"../styles/weather.css\";\n\nexport default function Current({ weatherInfo, location, date }) {\n  const ts = weatherInfo.current.dt;\n  function dayConverter(timestamp){\n    var a = new Date(timestamp * 1000);\n    var months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\n    var year = a.getFullYear();\n    var month = months[a.getMonth()];\n    var date = a.getDate();\n    var day = month + ' ' + date + ', ' + year\n    return day;\n  }\n\n  function timeConverter(timestamp){\n    var a = new Date(timestamp * 1000);\n    var hour = a.getHours();\n    var min = a.getMinutes();\n    var sec = a.getSeconds();\n    var date = hour + ':' + min + ':' + sec\n    return date;\n  }\n\n  return (\n    <div className=\"Weather\">\n      <div className=\"info\">\n        <img\n          className=\"icon\"\n          src={\n            \"https://openweathermap.org/img/wn/\" +\n            weatherInfo.current.weather[0].icon +\n            \".png\"\n          }\n          alt={weatherInfo.current.weather[0].main}\n        />\n        <ul className=\"list\">\n          <li className=\"temp\">\n            {Math.round(weatherInfo.current.temp)}\n            <sup className=\"temp-sym\">°C</sup>\n          </li>\n          <li> Humidity: {weatherInfo.current.humidity}% </li>\n          <li>\n            {\" \"}\n            Wind: {Math.round(weatherInfo.current.wind_speed * 3.6)} km/h{\" \"}\n          </li>\n          <li> Pressure: {weatherInfo.current.pressure} mb </li>\n          <li> Feels Like: {Math.round(weatherInfo.current.feels_like)}°C </li>\n        </ul>\n      </div>\n      <div className=\"other-info\">\n        <h2 className=\"other-city\">\n          {location.city || location.town},{\" \"}\n          {location.state || location.country.toUpperCase()}\n        </h2>\n        <h3 className=\"other-clouds\">\n          {weatherInfo.current.weather[0].description.toUpperCase()}\n        </h3>\n        <h3 className=\"other-clouds\">{date}</h3>\n        <h3 className=\"other-clouds\">{dayConverter(ts)}</h3>\n        <h3 className=\"other-clouds\">{timeConverter(ts)}</h3>\n      </div>\n      \n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}